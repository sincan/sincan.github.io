[{"title":"Hexo 部署GitHub repository","date":"2017-04-16T15:23:45.000Z","path":"2017/04/16/Hexo-部署GitHub-repository/","text":"配置环境执行命令 1$ npm install hexo-deployer-git --save 修改根目录下的_config.yml，具体内容如下 123deploy: type: git repo: &lt;repository url&gt; 其中&lt;repository url&gt;为GitHub上的repository。","tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]},{"title":"Hexo 添加分类和标签","date":"2017-04-15T17:36:50.000Z","path":"2017/04/16/Hexo-添加分类和标签/","text":"1、让分类和标签功能生效分类功能生效 执行命令 1$ hexo new page &quot;categories&quot; 修改source/categories/index.md中，title字段改为layout。保留date字段和值，添加type: &quot;categories&quot;,其他字段可删除，最终效果可参考下面效果。 12345---layout: categoriesdate: 2017-04-16 01:44:30type: &quot;categories&quot;--- 标签功能生效 执行命令 1$ hexo new page &quot;tags&quot; 修改source/tags/index.md中，title字段改为layout。保留date字段和值，添加type: &quot;tags&quot;,其他字段可删除，最终效果可参考下面效果。 12345---layout: tagsdate: 2017-04-16 01:44:30type: &quot;tags&quot;--- 2、文章添加分类与标签第一种方法，针对已存在的文章，头部date字段下增加以下内容 12categories:tags: categories为分类名称，如果多个分类用[分类1，分类2]。 tags为标签名称，如果多个便签用[标签1，便签2] 最终效果如下面： 1234title: 标题名称date: 2017-04-16 01:36:50categories: 分类名称tags: [标签名1，便签名2] 第二种方法，为方便不用每次都手动添加categories和tags，可以修改scaffolds/post.md。 123456---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;categories:tags:--- 这样的话，当新建文章时将自动添加categories和tags。 PS：发现yilia主题中的分类标签中，如果是多个分类的话，第一个分类可以执行，第二个分类会读取不到文件报错Cannot GET categories/XXXXXX。为了大家都可以顺利添加，建议用默认的主题测试。","tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]},{"title":"Hexo 添加RSS订阅","date":"2017-04-15T15:47:17.000Z","path":"2017/04/15/Hexo-添加RSS订阅/","text":"1、安装插件终端执行命令。 1$ npm install hexo-generator-feed --save 2、网站添加RSS支持编辑网站根目录下的_config.yml,添加以下代码。 123456789# RSS订阅支持plugin:- hexo-generator-feed# Feed Atomfeed:type: atompath: atom.xmllimit: 20 3、主题添加RSS支持编辑主题的_config.yml，路径为themes/&lt;主题名称&gt;/_config.yml，以下是yilia主题的修改方法,具体方法请查阅各自主题修改方法。 12subnav:rss: &quot;/atom.xml&quot; 4、生成RSS终端执行命令 1hexo g","tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]},{"title":"ssh key 创建与使用","date":"2017-04-14T10:15:45.000Z","path":"2017/04/14/ssh-key-创建与使用/","text":"生成ssh key1、终端输入命令。 1$ ssh-keygen -t rsa -C &quot;邮箱&quot; 2、下面信息是询问是否修改文件名和路径，一般都是用默认的，直接回车跳到下一步。 3、下面是询问是否添加密码，一般都是用默认，直接回车。 4、再次输入密码。如果没有就直接回车。 5、最终显示类似一下信息 以上这样就生成一个ssh key了。。 查看ssh key 信息终端输入命令 1$ cat ~/.ssh/id_rsa.pub 如果oschina或者GitHub上需要添加SSH，其中的ssh Value值就是命令返回的信息，具体会显示类似于下面的信息。 多个ssh key使用有时会出现这样的情况，oschina和GitHub分别用不同的ssh key，面对这种情况要如何才能做到呢？下面我们就把这问题给解决了。 1、按照上面的步骤生成第一个ssh key。如果已经生成，跳到下一步。 2、按照“生成ssh key”的步骤，到第二步时，这里不再是回车，而是填入具体的路径，这里可以输入以下内容并执行（只要路径相同，名称跟第一个不一致就可以）。后面步骤不变。 1$ /Users/&lt;用户名&gt;/.ssh/second_id_rsa 3、在终端输入命令，意思是在.ssh文件夹下创建config文件 12$ cd ~/.ssh/$ touch config 4、打开config，复制以下信息填入config文件。其中注意HostName和IdentityFile，分别是填入对应的信息。这里第一个是GitHub的配置，第二个是oschina的配置。 12345678910#github配置Host github.com HostName github.com IdentityFile ~/.ssh/id_rsa User git#gitoschina的配置Host git.oschina.net HostName git.oschina.net IdentityFile ~/.ssh/second_id_rsa User git 5、测试GitHub，如果正常会返回成功的信息。 1$ ssh -T git@github.com 6、测试oschina，如果正常会返回成功的信息。 1$ ssh -T git@git.oschina.net","tags":[{"name":"ssh","slug":"ssh","permalink":"http://yoursite.com/tags/ssh/"}]}]